'''
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be: 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
Let us list the factors of the first seven triangle numbers:
 1: 1
 3: 1,3             +2  +2
 6: 1,2,3,6         +3  +2
10: 1,2,5,10        +4  +0
15: 1,3,5,15        +5  +0
21: 1,3,7,21        +6  +0
28: 1,2,4,7,14,28   +7  +2
36: 1,2,3,4,6,8,12,16,32  +8  +3
45: 1,...,45
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first
triangle number to have over five
hundred divisors?
'''
#finn første tall med over 500 divisors
#sjekk om det er et triangle number.
#gå videre til neste

#divisors for hvert tall: alle primtalls faktorer,pluss multipler
'''n=0 #nth
t=0 #current sum
m=0 #divisor count
while t<5000:
    n+=1
    t+=n
print(n,t)
'''

#
'''n = 76576500
m = 0
for s in range(1,n+1):
    if n%s==0:
        m+=1
        print("{:3.0f}, {:8.0f}".format(m,s))
        #print("{:55.0f}".format(nsum[m]*10**(50-m)),"\t",nsum[m])
'''

import math
n=0 #nth
t=0 #current sum
m=0 #divisor count

while m<=500:
    if n%1000==0:
        print("new tusen")
    m =0
    n+=1
    t+=n
    for s in range(1,math.floor(math.sqrt(t))):
        if t%s==0:
            m+=1
    m*=2
    if math.sqrt(t)%2==0:
        m+=1
    if m>300:
        print("order:",n)
        print("dicisors:",m)
        print("number:",t)
#'''


#order: 2079
#dicisors: 638
#number: 2162160
#order: 12375
#dicisors: 578
#number: 76576500
